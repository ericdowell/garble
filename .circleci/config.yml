version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-apache-stretch-node-browsers
    environment:
      TZ: "/usr/share/zoneinfo/America/Chicago"
    steps:
      - checkout
      - run:
          name: Install PHP Dependencies/Extensions
          comand: |
            sudo apt-get install -y libicu-dev zlib1g-dev \
             && sudo docker-php-ext-configure intl \
             && sudo docker-php-ext-install intl \
             && sudo docker-php-ext-install zip \
             && sudo docker-php-ext-install mysqli \
             && sudo docker-php-ext-install pdo_mysql
      - run:
          name: Copy circle env file
          command: cp .env.circle .env
      - restore_cache:
          keys:
            - npm-install-build-{{ checksum "package-lock.json" }}
      - run:
          name: Install NPM Dependencies
          command: npm install
      - save_cache:
          key: npm-install-build-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Compile assets
          command: npm run prod
      - restore_cache:
          keys:
            - composer-install-build-{{ checksum "composer.lock" }}
      - run:
          name: Install PHP Dependencies
          command: composer install --no-interaction --optimize-autoloader --prefer-dist
      - save_cache:
          key: composer-install-build-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          name: Generate App Key
          command: php artisan key:generate
      - run:
          name: Remove node_modules folder since it is no longer needed.
          command: rm -rf node_modules
      - run:
          name: Create build folder
          command: mkdir -p /home/circleci/build
      - run:
          name: tar the project folder
          command: tar -zcf /home/circleci/build/build.tar.gz /home/circleci/project/
      - run:
          name: Make build folder in project root
          command: mkdir -p build
      - run:
          name: Move build tar into build folder in project root
          command: mv /home/circleci/build/build.tar.gz build/
      - persist_to_workspace:
          root: build
          paths:
            - build.tar.gz
  unit:
    docker:
      - image: circleci/php:7.2-apache-stretch-node-browsers
      - image: redis:latest
      - image: mysql:5.7
        environment:
          - MYSQL_DATABASE=circle_test
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_ROOT_HOST=%
    environment:
      TZ: "/usr/share/zoneinfo/America/Chicago"
    steps:
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Restore files from build job
          command: tar -zxf /tmp/build/build.tar.gz -C /
      - run:
          name: Wait for MySQL
      - run:
          name: Run Database Migration
          command: php artisan migrate
      - run:
          name: Run Unit Tests and Generate Code Coverage XML File
          command: |
            mkdir -p ~/phpunit
            phpunit --log-junit ~/phpunit/junit.xml tests --coverage-clover build/logs/clover.xml
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit
      - run:
          name: Attempt to Send Code Coverage XML File
          command: |
            if [ -z ${CODECLIMATE_REPO_TOKEN+x} ]
            then
              echo "CODECLIMATE_REPO_TOKEN not set";
              exit 1;
            else
              if ./vendor/bin/test-reporter
              then
                exit 0;
              else
                echo 'Nothing sent, failed';
                exit 1;
              fi
            fi
      - run:
          name: Remove xdebug extension
          command: sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - run:
          name: Start Chrome Driver
          command: ./vendor/laravel/dusk/bin/chromedriver-linux
          background: true
      - run:
          name: Run Laravel Server
          command: php artisan serve
          background: true
      - run:
          name: Run Laravel Dusk Tests
          command: php artisan dusk
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - unit:
          requires:
            - build
